//dz №7 завдання 5 (рівняння конгруентності)
//written by David Zashkolnyi, 1 course 
//Taras Shevchenko National University of Kyiv
//Faculty of Mechanics and Mathematics
//28.10.17


//функція обчислення найб спільного дільника і його лінійної комбінації
//a,b - будь-які натуральні числа
//х - вектор рядок [gcd,a1,b1], де a1 i b1 - коеф лінійної комбінації
function x=gcd_my(a,b)    
    c=%f
    if b>a then    //якщо b>a - міняємо місцями
        c=a
        a=b
        b=c
        c=%t
    end
    
    r=modulo(a,b)   //остача 1

    q=int(a/b)    //q1 з формули евкліда
    r1=[1,-q]
    if r==0 then
        x=[b,1,-(q-1)]  //якщо остача=0 зразу ясно що нсд - менше число
    else
        q=[q,int(b/r)]             //інакше - продовжуємо
        r=[r,modulo(b,r)]          //наступна остача
        tmp_r=[-q(2),1+q(1)*q(2)]  //лінійна комбінація 2-ої остачі
        r1=[r1;tmp_r]            //матриця лінійних комбінацій
        i=3
        r=[r,modulo(r(i-2),r(i-1))]   //матриця остач
        while r(i)>=1               
            q=[q,int(r(i-2)/r(i-1))]   //чергове q з формули евкліда
            tmp_r1=r1(i-2,1:2)     //вектор лінійної комбінації для r(i-2)
            tmp_r2=r1(i-1,1:2)     //вектор лінійної комбінації для r(i-1)
            tmp_r=tmp_r1-q(i)*tmp_r2    //рекурентне співвідношення r(i),r(i-1) i r(i-2)
            r1=[r1;tmp_r]           //додавання чергової лінійної комбінації до матриці
            i=i+1
            r=[r,modulo(r(i-2),r(i-1))]  //додавання чергової остачі
        end
    if r(i-1)==0 then 
        x=[r(i-2),r1(i-2,1:2)]    //якщо передостання остача = 0 то треба брати остачу (і-2)
    else
        x=[r(i-1),r1(i-1,1:2)]   //інакше - (і-1)
    end
    end
    if c then
        d=x(2)    //якщо спочатку міняли числа місцями відповідь теж міняємо місцями
        x(2)=x(3)
        x(3)=d
    end    
        


endfunction

//функція вирішення рівняння конгруентності виду "ax=b(mod n)"
//видає відповідь рядок виду "x=x0(mod n)"
//в собі містить попередню функцію
function t=equation_mod(s)
    a=strindex(s,"x")       //пошук в рядку х (а знаходиться до х)
    b=strindex(s,["=","("]) //пошук в рядку "=" і "("  (b знаходиться між ними)
    n=strindex(s,["d",")"]) //пошук в рядку "d" і ")"  (n знаходиться між ними)
    
    a=evstr(part(s,[1:a-1]))        //переведення в число а
    b=evstr(part(s,[b(1)+1:b(2)-1])) //переведення в число b
    n=evstr(part(s,[n(1)+2:n(2)-1])) //переведення в число с
    
    //найбільший спільний дільник
    x=gcd_my(a,n)
    if modulo(b,x(1))<>0 then   //якщо gcd не ділить b - коренів немає
        disp("коренів немає")
        t=[]
    else
        b=b/x(1)       //якщо ділить - з формули записуємо рядок
        t="x="+string(n+x(2)*b)+"(mod "+string(n/x(1))+')'
    end
   
endfunction
