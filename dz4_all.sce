//dz №4 повний скрипт
//written by David Zashkolnyi, 1 course, 04.10.17

//------------------------------1----------------------------------------------
                    //прості числа

timer()
x=primes(10^6) //генерування простих чисел до 10^6
disp(x)
disp("time="+string(timer()))
disp("<primes>:completed") //інформація для юзера
pause

//------------------------------2----------------------------------------------
                    //перевірка наявності простих чисел близнюків


disp("start <twins>")//інформація для юзера
n=size(x)          //довжина матриці простих чисел
k=0
for i=1:1:(n(2)-1)
    if x(i)+2==x(i+1)     //перевірка кожної пари простих чисел
        k=k+1
    end
    disp("twins i="+string(i))  //інформація для юзера
    
end
disp("<twins>:completed")  //інформація для юзера
disp("kilkistj: "+string(k))

disp("time="+string(timer())) //виведення часу
pause

//-------------------------------3---------------------------------------------
                         //функція pi(x)

disp("start  <function>")
n=-1
disp("")
while (n<2) | (n>10^6)   //введення змінної n, доки не буде введено корректне число
  n=input("введите n")
end
 

x=primes(n)
n2=size(x)     //пошук всіх простих чисел і знаходження їхньої кількості
disp("<function>:competed")
disp("п(n)="+string(n2(2)))

disp("time="+string(timer())) //виведення часу
pause

//--------------------------------4--------------------------------------------
                         //побудова графіків


disp("start <plot>")
y1=[]
n=[2:1:1000]
for i=1:1:999
    x=primes(n(i))
    n2=size(x)   //пошук всіх простих чисел і знаходження їхньої кількості для кожного і
    y1=[y1,n2(2)]  //створення матриці значень функції pi(x)
end
y2=n./log1p(n)     //створення матриці значень іншої функції
plot(n,y1,'red')   //победова графіків
plot(n,y2,'green')

disp("<function>:competed")
disp("time="+string(timer())) //виведення часу
pause

//---------------------------------5-------------------------------------------
                              //тест простоти
                              //метод з dz4_z5(primes5_1)
                              
disp("start <primes_5>")

p=primes(10^11)  //генерування матриці простих чисел до 10^11
disp("<primes_1>:completed")   //інформація для юзера
disp("time="+string(timer())) //виведення часу
n1=size(p)
n=1
while p(n)<10^10     //заміна всіх простих чисел<10^10 нулями
    p(n)=0
    disp('n='+string(n))   //інформація для юзера
    n=n+1
end
        //на виході отримали матрицю 10-значних простих чисел
        
        
        
        
disp("<matrix_primes>:completed")
disp("time="+string(timer())) //виведення часу

kilkist=0

x1=1      //додаткові змінні, щоб пришвидшити алгоритм
x2=1
x3=1
x4=1
x5=1
x6=1
x7=1
//генерування чисел

N2=10^7
x=rand(1,N2)
x=x*10^11          
disp("<rand>:completed")   //інформація для юзера
disp("start <circle>")     //інформація для юзера
for i=1:1:N2
    while x(i)<10^10            //якщо елемент має менше ніж 10 цифр - домножаємо його на 10
        x(i)=x(i)*10           //доки воно не буде 10-цифровим
    end
    x(i)=round(x(i))                //округлення елемента
    disp("i="+string(i))           //інформація для юзера
    x1=modulo(x(i),2)
    x2=modulo(x(i),3)
    x3=modulo(x(i),5)
    x4=modulo(x(i),7)              //відкидання чисел, які діляться на одне з перших 7 простих чисел
    x5=modulo(x(i),11)
    x6=modulo(x(i),13)
    x7=modulo(x(i),17)
    if (x1==0) | (x2==0) | (x3==0) | (x4==0) | (x5==0) | (x6==0) | (x7==0)
        continue
    end
    
    for k=n:1:n1(2)
        if x(i)==p(k)          //перевіряємо чи належить елемент матриці простих чисел
            kilkist=kilkist+1  //якщо належить - к-ть+1 і перехід до наступного елемента
            break
        end
    end
    
        
end
disp("<primes_5>:completed")
//disp(x)
//disp(p)
disp(kilkist)

persent=kilkist/N2*100   //знаходження відсотку простих чисел
disp(string(persent)+"%")
pause

  
  
  
  
//----------------------------------------6------------------------------------


  
//----------------------------------------7-------------------------------------

disp("start <kontrexample>")
x=primes(1000)          
disp("<primes>:completed")  //інформація для юзера
n=size(x)
p=0
q=0
disp("start circle")        //інформація для юзера


//цикл перевіряє усі комбінації p i q для p<q 
for i=1:1:n(2)-1
    disp("i="+string(i))    //інформація для юзера
    for j=(i+1):1:n(2)
        if 2^x(i)+1==3*x(j)    //якщо знайдена хоча б одна пара - вихід з циклу
            p=x(i)
            q=x(j)
            break
        end
    end
    if p>0
        break
    end
    
    
end
disp("<mission>:completed")
disp("p="+string(p))
disp("q="+string(q))

disp("time="+string(timer()))  //виведення часу
pause
//-------------------------------------------8------------------------------------
                               //пошук першого простого 10-значного числа з цифр-знаків pi та е 
                               //поки що програма знаходиться у стадії розробки


//значення pi та е, взяті з вікіпедії
e=[2,7,1,8,2,8,1,8,2,8,4,5,9,0,4,5, 2,3,5,3,6, 0,2,8,7,4, 7,1,3,5,2, 6,6,2,4,9, 7,7,5,7,2, 4,7,0,9,3, 6,9,9,9,5, 9,5,7,4,9, 6,6,9,6,7, 6,2,7,7,2, 4,0,7,6,6, 3,0,3,5,3, 5,4,7,5,9, 4,5,7,1,3, 8,2,1,7,8, 5,2,5,1,6, 6,4,2,7,4, 2,7,4,6,6, 3,9,1,9,3, 2,0,0,3,0, 5,9,9,2,1, 8,1,7,4,1, 3,5,9,6,6, 2,9,0,4,3, 5,7,2,9,0, 0,3,3,4,2, 9,5,2,6,0, 5,9,5,6,3, 0,7,3,8,1, 3,2,3,2,8, 6,2,7,9,4, 3,4,9,0,7, 6,3,2,3,3, 8,2,9,8,8, 0,7,5,3,1, 9,5,2,5,1 0,1,9,0,1, 1,5,7,3,8, 3,4,1,8,7, 9,3,0,7,0, 2,1,5,4,0, 8,9,1,4,9, 9,3,4,8,8, 4,1,6,7,5, 0,9,2,4,4, 7,6,1,4,6, 0,6,6,8,0, 8,2,2,6,4, 8,0,0,1,6, 8,4,7,7,4, 1,1,8,5,3, 7,4,2,3,4, 5,4,4,2,4, 3,7,1,0,7, 5,3,9,0,7, 7,7,4,4,9, 9,2,0,6,9, 5,5,1,7,0, 2,7,6,1,8, 3,8,6,0,6, 2,6,1,3,3, 1,3,8,4,5, 8,3,0,0,0, 7,5,2,0,4, 4,9,3,3,8, 2,6,5,6,0, 2,9,7,6,0, 6,7,3,7,1, 1,3,2,0,0, 7,0,9,3,2, 8,7,0,9,1, 2,7,4,4,3, 7,4,7,0,4, 7,2,3,0,6, 9,6,9,7,7, 2,0,9,3,1, 0,1,4,1,6, 9,2,8,3,6 8,1,9,0,2, 5,5,1,5,1, 0,8,6,5,7, 4,6,3,7,7, 2,1,1,1,2, 5,2,3,8,9, 7,8,4,4,2, 5,0,5,6,9, 5,3,6,9,6, 7,7,0,7,8, 5,4,4,9,9, 6,9,9,6,7, 9,4,6,8,6, 4,4,5,4,9, 0,5,9,8,7, 9,3,1,6,3, 6,8,8,9,2, 3,0,0,9,8, 7,9,3,1,2, 7,7,3,6,1, 7,8,2,1,5, 4,2,4,9,9, 9,2,2,9,5, 7,6,3,5,1, 4,8,2,2,0, 8,2,6,9,8, 9,5,1,9,3, 6,6,8,0,3, 3,1,8,2,5, 2,8,8,6,9, 3,9,8,4,9, 6,4,6,5,1, 0,5,8,2,0, 9,3,9,2,3, 9,8,2,9,4, 8,8,7,9,3, 3,2,0,3,6, 2,5,0,9,4 4,3,1,1,7, 3,0,1,2,3, 8,1,9,7,0, 6,8,4,1,6, 1,4,0,3,9, 7,0,1,9,8, 3,7,6,7,9, 3,2,0,6,8, 3,2,8,2,3, 7,6,4,6,4, 8,0,4,2,9, 5,3,1,1,8, 0,2,3,2,8, 7,8,2,5,0, 9,8,1,9,4, 5,5,8,1,5, 3,0,1,7,5, 6,7,1,7,3, 6,1,3,3,2, 0,6,9,8,1, 1,2,5,0,9, 9,6,1,8,1, 8,8,1,5,9, 3,0,4,1,6]

pi=[3,1,4,1,5,9, 2,6,5,3,5, 8,9,7,9,3, 2,3,8,4,6, 2,6,4,3,3,  8,3,2,7,9, 5,0,2,8,8, 4,1,9,7,1, 6,9,3,9,9, 3,7,5,1,0,5,8,2,0,9, 7,4,9,4,4, 5,9,2,3,0, 7,8,1,6,4,0,6,2,8,6,  2,0,8,9,9, 8,6,2,8,0, 3,4,8,2,5, 3,4,2,1,1,7,0,6,7,9,8,2,1,4,8, 0,8,6,5,1, 3,2,8,2,3, 0,6,6,4,7, 0,9,3,8,4,  4,6,0,9,5, 5,0,5,8,2, 2,3,1,7,2, 5,3,5,9,4, 0,8,1,2,8,4,8,1,1,1,7,4,5,0,2, 8,4,1,0,2, 7,0,1,9,3, 8,5,2,1,1,  0,5,5,5,9, 6,4,4,6,2, 2,9,4,8,9, 5,4,9,3,0, 3,8,1,9,6,4,4,2,8,8, 1,0,9,7,5, 6,6,5,9,3,3,4,4,6,1, 2,8,4,7,5,  6,4,8,2,3, 3,7,8,6,7, 8,3,1,6,5, 2,7,1,2,0, 1,9,0,9,1,4,5,6,4,8, 5,6,6,9,2, 3,4,6,0,3, 4,8,6,1,0,4,5,4,3,2,  6,6,4,8,2, 1,3,3,9,3, 6,0,7,2,6, 0,2,4,9,1, 4,1,2,7,3]

p=primes(10^7)
disp("<primes>:completed")   //інформація для юзера
disp("time="+string(timer())) //виведення часу
n1=size(p)
n=1
while p(n)<10^6     //заміна всіх простих чисел<10^10 нулями
    p(n)=0
    disp('n='+string(n))   //інформація для юзера
    n=n+1
end
disp("<primes2>:completed")
pause

n1=size(e)
x=e(1)
for i=2:1:6        //створення першого 10-значного числа з цифр e
    x=x*10+e(i)
end
t=%f
disp(x)
disp("first x complete")   
pause
for i=11:1:(n1(2)-1)   //ще сам толком не придумав, як цикл буде працювати
    for j=n:1:n1(2)
        if x==p(j) & o1      //o1,o2 - змінні, які визначають чи було вже просте число в е і pi відповідно
            t1=%t
        end
        if y==p(j) & o2
            t2==%t
        end
        if t1 & t2
            break
    end
    if t1 & t2
        disp(x)
        break
    else
        i1=i+1
        if ~o1 then x=modulo(x,10^5)*10+e(i1) end
        if ~o2 then y=modulo(y,10^5)*10+pi(i1) end
    end
        
    
end
if ~t then
    disp("no")
end

